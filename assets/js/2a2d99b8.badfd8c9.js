(self.webpackChunkgosc_2021=self.webpackChunkgosc_2021||[]).push([[2367],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return u},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=l(r),f=o,m=p["".concat(s,".").concat(f)]||p[f]||d[f]||i;return r?n.createElement(m,c(c({ref:t},u),{},{components:r})):n.createElement(m,c({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,c=new Array(i);c[0]=p;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a.mdxType="string"==typeof e?e:o,c[1]=a;for(var l=2;l<i;l++)c[l]=r[l];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},4665:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return a},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return u},default:function(){return p}});var n=r(2122),o=r(9756),i=(r(7294),r(3905)),c=["components"],a={sidebar_position:1,title:"Introduction",slug:"/2021/microservice/"},s=void 0,l={unversionedId:"2021/microservice/index",id:"2021/microservice/index",isDocsHomePage:!1,title:"Introduction",description:"\x3c!--",source:"@site/docs/2021/microservice/index.md",sourceDirName:"2021/microservice",slug:"/2021/microservice/",permalink:"/gsoc/docs/2021/microservice/",editUrl:"https://github.com/fossology/gsoc-2021/edit/master/docs/docs/2021/microservice/index.md",version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Introduction",slug:"/2021/microservice/"},sidebar:"2021",previous:{title:"Setup",permalink:"/gsoc/docs/2021/copyrights/setup"},next:{title:"Week 1",permalink:"/gsoc/docs/2021/microservice/updates/2021-06-07"}},u=[{value:"Current Draw backs of installing FOSSology in cluster mode",id:"current-draw-backs-of-installing-fossology-in-cluster-mode",children:[]},{value:"Project Goal",id:"project-goal",children:[]}],d={toc:u};function p(e){var t=e.components,r=(0,o.Z)(e,c);return(0,i.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"FOSSology is designed in modular fashion but it certainly does not follow micro-service architecture. If there is a change in an agent's logic, the whole source code has to be built again and installed. Whereas in micro-service architecture, only this agent needs to be built and installed/deployed."),(0,i.kt)("h2",{id:"current-draw-backs-of-installing-fossology-in-cluster-mode"},"Current Draw backs of installing FOSSology in cluster mode"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"When adding or removing a node, scheduler needs to be restarted."),(0,i.kt)("li",{parentName:"ul"},"Every node needs to have same set of agents."),(0,i.kt)("li",{parentName:"ul"},"Because of the current version check mechanism on scheduler, for a single change, the whole code base needs to be redeployed to get new version string.")),(0,i.kt)("h2",{id:"project-goal"},"Project Goal"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Ability to add one agent to each node for easier updating and scaling."),(0,i.kt)("li",{parentName:"ul"},"Dynamically adding new nodes without the need to restart or stop the scheduler"),(0,i.kt)("li",{parentName:"ul"},"Kubernetes deployment for easy scaling in or out")))}p.isMDXComponent=!0}}]);